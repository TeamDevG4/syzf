/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

package org.group4.ui;

import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.awt.event.ItemEvent;
import java.awt.event.ItemListener;
import java.util.Vector;

import javax.swing.JScrollPane;

import org.group4.util.Context;
import org.group4.util.FileUtil;


/**
 *
 * @author Kam
 */
public class RecommendUI extends javax.swing.JPanel {

    /**
     * Creates new form RecommendUI
     */
    public RecommendUI() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        recommand = new javax.swing.JPanel();
        typeComboBox = new javax.swing.JComboBox();
        jLabel9 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jScrollPane1.setVerticalScrollBarPolicy(JScrollPane.VERTICAL_SCROLLBAR_AS_NEEDED);
        recommendedProbs = new javax.swing.JTextArea();
        recommendedProbs.setLineWrap(true);
        jLabel10 = new javax.swing.JLabel();

        recommand.setOpaque(false);

        typeComboBox.setModel(new javax.swing.DefaultComboBoxModel(FileUtil.getAllTypes("problemType.txt")));
        typeComboBox.addActionListener(new ActionListener(){
			@Override
			public void actionPerformed(ActionEvent arg0) {
				// TODO Auto-generated method stub
                recommend((String)typeComboBox.getSelectedItem());
			}
        });

        jLabel9.setText("题目类型：");

        recommendedProbs.setEditable(false);
        recommendedProbs.setColumns(20);
        recommendedProbs.setRows(5);
        jScrollPane1.setViewportView(recommendedProbs);

        jLabel10.setText("以下是推荐给你的题目：");

        javax.swing.GroupLayout recommandLayout = new javax.swing.GroupLayout(recommand);
        recommand.setLayout(recommandLayout);
        recommandLayout.setHorizontalGroup(
            recommandLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(recommandLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(recommandLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 610, Short.MAX_VALUE)
                    .addGroup(recommandLayout.createSequentialGroup()
                        .addGroup(recommandLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel10)
                            .addGroup(recommandLayout.createSequentialGroup()
                                .addComponent(jLabel9)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(typeComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        recommandLayout.setVerticalGroup(
            recommandLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(recommandLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(recommandLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel9)
                    .addComponent(typeComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel10, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 397, Short.MAX_VALUE)
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 630, Short.MAX_VALUE)
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                    .addGap(0, 0, Short.MAX_VALUE)
                    .addComponent(recommand, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(0, 0, Short.MAX_VALUE)))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 475, Short.MAX_VALUE)
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                    .addGap(0, 0, Short.MAX_VALUE)
                    .addComponent(recommand, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(0, 0, Short.MAX_VALUE)))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void recommend(String type){
        Vector<String> doneProbs = FileUtil.getUserDoneProbs(Context.getUserID());
        boolean done[] = new boolean[4000];
        for(int i = 0;i < doneProbs.size();i++){
        	done[Integer.valueOf(doneProbs.get(i)) - 1000] = true;
        }
        String[] probs = FileUtil.getProbsOfType("problemType.txt", type);
        for(int i = 0;i < probs.length;i++){
        	if(!done[Integer.valueOf(probs[i]) - 1000]){
        		recommendedProbs.append(probs[i] + "\t");
        	}
        }
        if(recommendedProbs.getText() == ""){
        	recommendedProbs.setText("系统暂时没有该类型的题目推荐给你");
        }
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JPanel recommand;
    private javax.swing.JTextArea recommendedProbs;
    private javax.swing.JComboBox typeComboBox;
    // End of variables declaration//GEN-END:variables
}
