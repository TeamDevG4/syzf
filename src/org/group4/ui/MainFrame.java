/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

package org.group4.ui;

import java.awt.CardLayout;
import java.awt.image.BufferedImage;
import java.io.File;
import java.io.IOException;
import java.util.logging.Level;
import java.util.logging.Logger;

import javax.imageio.ImageIO;
import javax.swing.JTabbedPane;
import javax.swing.event.ChangeEvent;
import javax.swing.event.ChangeListener;

import org.group4.util.Context;
import org.group4.util.URLOpener;

/**
 *
 * @author Kam
 */
public class MainFrame extends javax.swing.JFrame {

    private static MainFrame thisMainFrame = null;

    static Object sharedMainFrame() {
        throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.
    }
    private MyHistoryUI history;
    private MyAchievementUI achievement;
    private MyStepsUI steps;
    private OurDifferenceUI difference;
    private RecommendUI recommend;
    /**
     * Creates new form MainFrame
     */
    public MainFrame() {
        super("谁与争锋");
        initComponents();
    }

    public static MainFrame getInstance(){
        if(thisMainFrame == null){
            thisMainFrame = new MainFrame();
        }
        return thisMainFrame;
    }
    
    public void initTabbedPane(){
        tp = new JTabbedPane();
        history = new MyHistoryUI();
        tp.addTab("我的奋斗史", history);
        steps = new MyStepsUI();
        tp.addTab("我的ACM Steps", steps);
        achievement = new MyAchievementUI();
        tp.addTab("我的亮点", achievement);
        difference = new OurDifferenceUI();
        tp.addTab("我们的差距", difference);
        recommend = new RecommendUI();
        tp.addTab("题目推荐", recommend);
        tp.setTabPlacement(JTabbedPane.LEFT);
        tp.addChangeListener(new MyTabChangedListener());
        getContentPane().add(tp, 1);
    }
    
    private boolean changed[] = new boolean[5];
    private class MyTabChangedListener implements ChangeListener{
        private static final int MY_HISTORY = 0, MY_STEPS = 1, MY_ACHIEVEMENT = 2,
                OUR_DIFFERENCE = 3, RECOMMEND = 4;
        @Override
        public void stateChanged(ChangeEvent e) {
            switch(((JTabbedPane)e.getSource()).getSelectedIndex()){
                case MY_HISTORY:
                    if(!changed[MY_HISTORY]){
                        changed[MY_HISTORY] = true;
                    }
                    break;
                case MY_STEPS:
                	if(!changed[MY_STEPS]){
                		changed[MY_STEPS] = true;
                		steps.renewChart();
                	}
                    break;
                case MY_ACHIEVEMENT:
                    if(!changed[MY_ACHIEVEMENT]){
                        changed[MY_ACHIEVEMENT] = true;
                        achievement.update();
                    }
                    break;
                case OUR_DIFFERENCE:
                    if(difference.getOppID() == null)
                        difference.askForUserID();
                    break;
                default:
                    break;
            }
        }
    }
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jMenuBar1 = new javax.swing.JMenuBar();
        jMenu1 = new javax.swing.JMenu();
        jMenuItemSwitchUser = new javax.swing.JMenuItem();
        jMenu2 = new javax.swing.JMenu();
        menuItemImportTypes = new javax.swing.JMenuItem();
        menuItemGoPracticing = new javax.swing.JMenuItem();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        getContentPane().setLayout(new java.awt.CardLayout());

        jMenu1.setText("用户");

        jMenuItemSwitchUser.setText("切换账号");
        jMenuItemSwitchUser.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItemSwitchUserActionPerformed(evt);
            }
        });
        jMenu1.add(jMenuItemSwitchUser);

        jMenuBar1.add(jMenu1);

        jMenu2.setText("工具");

        menuItemImportTypes.setText("导入题目分类");
        menuItemImportTypes.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                menuItemImportTypesActionPerformed(evt);
            }
        });
        jMenu2.add(menuItemImportTypes);

        menuItemGoPracticing.setText("去刷题");
        menuItemGoPracticing.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                menuItemGoPracticingActionPerformed(evt);
            }
        });
        jMenu2.add(menuItemGoPracticing);

        jMenuBar1.add(jMenu2);

        setJMenuBar(jMenuBar1);

        getContentPane().add(new LoginForm(), 0);
        pack();
    }// </editor-fold>//GEN-END:initComponents
    private boolean isLogin = false;
    private void jMenuItemSwitchUserActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItemSwitchUserActionPerformed
        // TODO add your handling code here:
        if(isLogin){
            flip();
            for(int i = 0;i < changed.length;i++){
            	changed[i] = false;
            }
            Context.setUserID(null);
        }
    }//GEN-LAST:event_jMenuItemSwitchUserActionPerformed

    private void menuItemImportTypesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_menuItemImportTypesActionPerformed
        // TODO add your handling code here:
     //   JFileChooser fd = new JFileChooser();  
        //fd.setFileSelectionMode(JFileChooser.DIRECTORIES_ONLY);  
    //    fd.showOpenDialog(null);  
    //    File f = fd.getSelectedFile();
        new AddTypesDialog().show();
    }//GEN-LAST:event_menuItemImportTypesActionPerformed

    private void menuItemGoPracticingActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_menuItemGoPracticingActionPerformed
        // TODO add your handling code here:
        URLOpener opener = new URLOpener();
        opener.openURL("http://acm.hdu.edu.cn");
    }//GEN-LAST:event_menuItemGoPracticingActionPerformed

    public void flip(){
        CardLayout card = (CardLayout) MainFrame.getInstance().getContentPane().getLayout();
        card.next(MainFrame.getInstance().getContentPane());
        isLogin = !isLogin;
    }
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(MainFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(MainFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(MainFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(MainFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            @Override
            public void run() {
                MainFrame frame = MainFrame.getInstance();
                frame.setVisible(true);
                frame.setSize(800,600);
                //设置窗口居中
                frame.setLocationRelativeTo(null);
                BufferedImage icon;
                try {
                    icon = ImageIO.read(new File("res/tocas.png"));
                    frame.setIconImage(icon);
                } catch (IOException ex) {
                    Logger.getLogger(MainFrame.class.getName()).log(Level.SEVERE, null, ex);
                }
                frame.setResizable(false);
            }
        });
    }
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenu jMenu2;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JMenuItem jMenuItemSwitchUser;
    private javax.swing.JMenuItem menuItemGoPracticing;
    private javax.swing.JMenuItem menuItemImportTypes;
    private JTabbedPane tp;
    // End of variables declaration//GEN-END:variables
}
